{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/image.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Image","_ref","imageName","alt","style","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","data","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","childImageSharp","_public_static_d_3491859693_json__WEBPACK_IMPORTED_MODULE_0__","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","className","styles","header","onClick","window","scrollTo","top","behavior","iconLink","href","components_image","Footer","width","textAlign","marginBottom","display","justifyContent","Date","getFullYear","role","aria-label","Layout","gatsby_browser_entry","Fragment","margin","padding","footer","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-f3a9ddbb74709413e6de.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Page not found</h1>\n    <p>Hmm, we can&#39;t find the page you&#39;re looking for...</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({ imageName, alt, style }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        omIcon: file(relativePath: { eq: \"om-icon.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        appleIcon: file(relativePath: { eq: \"apple-icon.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 60) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        appleBanner: file(relativePath: { eq: \"apple-banner.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        omPhoto: file(relativePath: { eq: \"om-photo.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 300) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return <Img style={style} alt={alt} fluid={data[imageName].childImageSharp.fluid} />\n    }}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Image from \"./image\"\n\nimport styles from \"./header.module.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className={styles.header}>\n    <h1\n      className={styles.title}\n      onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\n    >\n      {siteTitle}\n    </h1>\n    <a\n      className={styles.iconLink}\n      href=\"https://podcasts.apple.com/us/podcast/open-meditations/id1469856839\"\n    >\n      <Image imageName=\"appleIcon\" alt=\"icon to listen on apple podcasts\" />\n    </a>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport Image from \"./image\"\n\nconst Footer = () => (\n  <footer\n    style={{\n      width: \"100%\",\n      textAlign: \"center\",\n      marginBottom: 9,\n    }}\n  >\n    <div\n      style={{ display: \"flex\", justifyContent: \"center\", marginBottom: 18 }}\n    >\n      <a href=\"https://podcasts.apple.com/us/podcast/open-meditations/id1469856839\">\n        <Image\n          style={{ width: 200 }}\n          imageName=\"appleBanner\"\n          alt=\"banner to listen on apple podcasts\"\n        />\n      </a>\n    </div>\n    © {new Date().getFullYear()} made with{\" \"}\n    <span role=\"img\" aria-label=\"Heart\">\n      ❤️\n    </span>\n    in nyc\n  </footer>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ data, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            padding: `0px 1.0875rem 0px`,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}